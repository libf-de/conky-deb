Description: Use monotonic time when calculating the update interval
 When the system clock is moved backwards, the update interval would be
 calculated incorrectly. If it was moved back far enough, conky would use
 100% cpu. Conky now uses monotonic clock to prevent this. If it turns out
 to be unsupported on some platform, an appropriate fallback can be added.
Origin: upstream, http://git.omp.am/?p=conky.git;a=patch;h=c9a306defd1f2f04af99320a02a4a27062f59328
Bug-Debian: http://bugs.debian.org/474372

--- a/src/common.c
+++ b/src/common.c
@@ -37,7 +37,7 @@
 #include "timeinfo.h"
 #include <ctype.h>
 #include <errno.h>
-#include <sys/time.h>
+#include <time.h>
 #include <sys/ioctl.h>
 #include <net/if.h>
 #include <netinet/in.h>
@@ -92,10 +92,10 @@
 
 double get_time(void)
 {
-	struct timeval tv;
+	struct timespec tv;
 
-	gettimeofday(&tv, 0);
-	return tv.tv_sec + (tv.tv_usec / 1000000.0);
+	clock_gettime(CLOCK_MONOTONIC, &tv);
+	return tv.tv_sec + (tv.tv_nsec * 1e-9);
 }
 
 /* Converts '~/...' paths to '/home/blah/...' assumes that 'dest' is at least
